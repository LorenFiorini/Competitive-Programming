import numpy

def showmat(mat):
	print()
	for i in range(len(mat)):
		for j in range(len(mat[0])):
			print("{}".format(mat[i][j]), end = " ")
		print()
	

def count(mat, R, C):
	ans = 0
	prerow = [[0 for i in range(C)] for j in range(R)]
	precol = [[0 for i in range(C)] for j in range(R)] 
	
	for i in range(R):
		for j in range(C):
			prerow[i][j] = mat[i][j]
			precol[i][j] = mat[i][j]
			if mat[i][j] == 1 and j > 0:
				prerow[i][j] += prerow[i][j-1]
			if mat[i][j] == 1 and i > 0:
				precol[i][j] += precol[i-1][j]
	
	for i in range(R):
		for j in range(C):
			if prerow[i][j] >= 2 and  precol[i][j] >= 4:
				ans += min(prerow[i][j] - 1, (precol[i][j] // 2) - 1)
			if prerow[i][j] >= 4 and  precol[i][j] >= 2:
				ans += min(precol[i][j] - 1, (prerow[i][j] // 2) - 1)
	
	return ans

def solve(_):
	R, C = input().split()
	R = int(R)
	C = int(C)
	mat = list()
	for i in range(R):
		row = list(map(int, input().split()))
		mat.append(row)
	
	answ = count(mat, R, C)
	mat = numpy.flipud(mat)
	answ += count(mat, R, C)
	mat = numpy.flip(mat)
	answ += count(mat, R, C)
	mat = numpy.flipud(mat)
	answ += count(mat, R, C)
	
	print("Case #{}: {}".format(_, answ))


def main():
	t = int(input())
	for _ in range(1, t + 1):
		solve(_)
	




if __name__ == '__main__':
	main()

