#include <bits/stdc++.h>
using namespace std;
#define INF (int)1e9
#define MOD 1000000007
#define PI 3.1415926535897932384626433832795
//
typedef long long ll;
typedef pair<ll, ll> pii;
typedef vector<int> vint;
typedef vector<ll> vll;
typedef vector<string> vstr;
typedef vector<pii> vpii;
typedef vector<vint> vvi;
typedef map<int,int> mpii;
typedef set<int> seti;
typedef multiset<int> mseti;
#define mk make_pair
#define pb push_back
#define ff first
#define ss second
//
#define por(i, a, b, in) for (int i=a ; i<(b) ; i+=in)
#define rpor(i, a, b, in) for (int i=a-1 ; i>=(b) ; i-=in)
#define rep(i, a, b) por(i, a, b, 1)
#define rrep(i, a, b) rpor(i, a, b, 1)
#define each(it, mp) for (auto it = mp.begin(); it != mp.end(); it++)
#define all(c) c.begin(), c.end()
#define allg(c) all(c), greater<> ()
#define len(v) (int) v.size()
#define notin(c, x) ((c).find(x) == (c).end())
//
#define show(x) cout << x << "\n";
#define showp(x, y) cout << x << " "<< y << "\n";
#define showv(v, n) rep(i, 0, n) {cout << v[i] << " ";} cout << "\n";
#define showvp(v, n) rep(i, 0, n) {showp(v[i].ff, v[i].ss);}
#define showvv(vv, n, m) rep(i, 0, n) {showv(vv[i], m);}
#define showset(it, st) each(it, st) {cout << *it << " ";} cout << "\n";
#define showmap(it, mp) each(it, mp) {cout << it->ff << " " << it->ss << "\n";} cout << "\n";
#define precision(d) cout << setprecision(d) << fixed;

//ll mx = 0, mn = 1e9 + 1;
bool cmp(const pii &a, const pii &b) {
	//ll coef
	return a.ss > b.ss;
}
ll answer = 0;

void dfs(vint used, vpii v, ll mx, ll, mn) {
	pii next = v[i];
	mx = max(mx, next.ff);
	mn = min(mn, next.ff);
	
	ll co = 2e12;
	ll po = 0;
	rep (p, 0, n) {
		if (used[p]) continue;
		ll coef = (mx - mn) * v[p].ss;
		if (coef < co) {
			
		}
	}
	
	
	
	
}

void solve () {
	// C
	ll ans = 0;
	ll n;
	cin >> n;
	//vint v(n);
	mpii mp;
	mpii :: iterator it;
	rep(i,0,n) {
		ll num;
		cin >> num;
		it = mp.find(num);
		if (it == mp.end()) {
			mp.insert(mk(num, 1));
		} else {
			it->ss++;
		}
	}
	ll m = len(mp);
	vpii v(m);
	vint used(m, 0);
	it = mp.begin();
	rep (i, 0, m) {
		v[i].ff = it->ff;
		v[i].ss = it->ss;
		it++;
	}
	sort(all(v), cmp);
	showvp(v, m);
	
	//------------------------------------
	ll mx = 0, mn = 1e9 + 1;
	dfs(used, v, mx, mn);
	
	
	
	
	
	show(ans);
}

int main () 
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	solve();
	
	return 0;
}

